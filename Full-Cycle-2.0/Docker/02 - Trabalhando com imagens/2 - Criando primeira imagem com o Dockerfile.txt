Dockerfile {
    "A Dockerfile é um documento de texto que contém todos os comandos que um usuário pode chamar
     na linha de comando para montar uma imagem. O uso docker build de usuários pode criar uma
     compilação automatizada que executa várias instruções de linha de comando em sucessão."

    - Após gerar o nosso DockerFile com os comandos que queiramos que seja executados quando realizarmos
      o build do DockerFile a fins de construir a nossa imagem, vamos executar:

      -> docker build -t gabrielrodriguesdev/nginx-com-vim:latest . {
        docker build (realiza o build sobre o DockerFile a fim de criar a imagem)
        -t gabrielrodriguesdev/nginx-com-vim:latest . (-t parametro de nomeação de tag) {
          Onde  gabrielrodriguesdev/nginx-com-vim é o nome e o latest é a tag
        }
        . pega o diretório atual (onde é que estava o DockerFile)
      }

      Após executar o docker build, o  docker cria as imagens seguindo o passo a passo do DockerFile.
      No nosso exemplo o primeiro passo foi baixar a imagem mais recente do nginx 
      {
        FROM nginx:latest
      }
      Após baixar realizou uma mudança na imagem atualizando os pacotes (mudança nos pacotes do linux
      onde o nginx roda) 
      {
        RUN apt-get update
      }

      Após executar o primeiro comando vamos instalar um pacote na imagem (pacote linux onde o 
      ngnix roda) 
      {
        RUN apt-get install vim -y
      }

      Caso eu venha subir um container a partir da nossa imagem buildada teremos já o vim instalado nele.


     Observação -> Dentro da pasta "Dockerfiles" tem alguns exemplos que pratiquei durante a aula.
}
